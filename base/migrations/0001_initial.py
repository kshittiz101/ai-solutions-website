# Generated by Django 5.2.6 on 2025-09-12 10:51

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('company_name', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('job_title', models.CharField(blank=True, max_length=255)),
                ('job_details', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('in_review', 'In review'), ('closed', 'Closed')], db_index=True, default='new', max_length=16)),
            ],
            options={
                'ordering': ['-created_at', '-id'],
                'indexes': [models.Index(fields=['status', '-created_at'], name='base_inquir_status_852200_idx'), models.Index(fields=['email'], name='base_inquir_email_9d6267_idx')],
            },
        ),
        migrations.CreateModel(
            name='SoftwareSolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='software_solutions/')),
                ('description', models.TextField(blank=True)),
                ('published_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solutions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CaseStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('summary', models.TextField(blank=True)),
                ('problem', models.TextField(blank=True)),
                ('solution', models.TextField(blank=True)),
                ('results', models.TextField(blank=True)),
                ('client_name', models.CharField(blank=True, max_length=255)),
                ('client_company', models.CharField(blank=True, max_length=255)),
                ('client_job_title', models.CharField(blank=True, max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='case_studies/')),
                ('published_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='case_studies', to=settings.AUTH_USER_MODEL)),
                ('solutions', models.ManyToManyField(blank=True, related_name='case_studies', to='base.softwaresolution')),
            ],
            options={
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('content', models.TextField()),
                ('excerpt', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], db_index=True, default='draft', max_length=16)),
                ('published_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-published_at', '-created_at'],
                'indexes': [models.Index(fields=['status', '-published_at'], name='base_articl_status_41faab_idx')],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('starts_at', models.DateTimeField()),
                ('ends_at', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('is_public', models.BooleanField(db_index=True, default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['starts_at', 'id'],
                'indexes': [models.Index(fields=['is_public', 'starts_at'], name='base_event_is_publ_fc7cd2_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('ends_at__isnull', True), ('ends_at__gte', models.F('starts_at')), _connector='OR'), name='event_ends_after_start')],
            },
        ),
        migrations.CreateModel(
            name='InquiryResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_type', models.CharField(choices=[('admin', 'Admin'), ('customer', 'Customer')], max_length=16)),
                ('recipient', models.CharField(blank=True, max_length=255)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('body', models.TextField()),
                ('direction', models.CharField(choices=[('inbound', 'Inbound'), ('outbound', 'Outbound')], default='outbound', max_length=16)),
                ('sent_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inquiry_responses', to=settings.AUTH_USER_MODEL)),
                ('inquiry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='base.inquiry')),
            ],
            options={
                'ordering': ['sent_at', 'id'],
                'indexes': [models.Index(fields=['inquiry', 'sent_at'], name='base_inquir_inquiry_8df8fa_idx'), models.Index(fields=['sender_type'], name='base_inquir_sender__c09bdc_idx'), models.Index(fields=['direction'], name='base_inquir_directi_0da7a1_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('sender_type', 'customer'), models.Q(('sender_type', 'admin'), ('admin__isnull', False)), _connector='OR'), name='inquiry_resp_admin_required_when_admin_sender')],
            },
        ),
        migrations.AddIndex(
            model_name='softwaresolution',
            index=models.Index(fields=['slug'], name='base_softwa_slug_d9f617_idx'),
        ),
        migrations.AddIndex(
            model_name='casestudy',
            index=models.Index(fields=['slug'], name='base_casest_slug_35e7f7_idx'),
        ),
    ]
